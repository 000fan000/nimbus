<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
  <Token>
    <TokenIdentifier>
      <Name>Common-Metrics</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>group___common-_metrics.html</Path>
    <Abstract>For common system metrics.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIToolbarHeightForOrientation</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>group___common-_metrics.html</Path>
    <Anchor>gae2ad00b094918f5b5929b3520007551b</Anchor>
    <Abstract>Fetch the height of a toolbar in a given orientation.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIStatusBarAnimationCurve</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>group___common-_metrics.html</Path>
    <Anchor>ga0cec7c71cc4f5efee4113d16abde3ca1</Anchor>
    <Abstract>The animation curve used when animating the status bar.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIStatusBarAnimationDuration</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>group___common-_metrics.html</Path>
    <Anchor>gaf476266576d4c565941facf2ae5583e7</Anchor>
    <Abstract>The animation duration for animating the status bar.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Data-Structures</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>group___data-_structures.html</Path>
    <Abstract>For classic computer science data structures.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Debugging-Tools</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>group___debugging-_tools.html</Path>
    <Abstract>For inspecting code and writing to logs in debug builds.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIDASSERT</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>group___debugging-_tools.html</Path>
    <Anchor>ga13cc3ae82820ea8141bc319bcb76ab7f</Anchor>
    <Abstract>Assertions that only fire when DEBUG is defined.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIDPRINT</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>group___debugging-_tools.html</Path>
    <Anchor>ga74e1fbd5193e3020f3abf072dcd59f26</Anchor>
    <Abstract>Only writes to the log when DEBUG is defined.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIDPRINTMETHODNAME</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>group___debugging-_tools.html</Path>
    <Anchor>gaa606f4ba1dd48de5e2fd679b7d8b22d8</Anchor>
    <Abstract>Write the containing method&amp;#39;s name to the log using NIDPRINT.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIDCONDITIONLOG</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>group___debugging-_tools.html</Path>
    <Anchor>ga2d769dcaac3915eea5b9860a40bd179a</Anchor>
    <Abstract>Only writes to the log if condition is satisified.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIDERROR</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>group___debugging-_tools.html</Path>
    <Anchor>gab5d8a773517976d97335706474ae1317</Anchor>
    <Abstract>Only writes to the log if NIMaxLogLevel &amp;gt;= NILOGLEVEL_ERROR.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIDWARNING</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>group___debugging-_tools.html</Path>
    <Anchor>gacc8f90bb05765e613bb0dbb16d372dfc</Anchor>
    <Abstract>Only writes to the log if NIMaxLogLevel &amp;gt;= NILOGLEVEL_WARNING.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIDINFO</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>group___debugging-_tools.html</Path>
    <Anchor>gaf0d5ca9cb5bd5c57cfaee0b9a565bb84</Anchor>
    <Abstract>Only writes to the log if NIMaxLogLevel &amp;gt;= NILOGLEVEL_INFO.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIMaxLogLevel</Name>
      <APILanguage>c</APILanguage>
      <Type>data</Type>
    </TokenIdentifier>
    <Path>group___debugging-_tools.html</Path>
    <Anchor>ga4772ce14310fecf30ed2bc36dfe7c505</Anchor>
    <Abstract>The maximum log level to output for Nimbus debug logs.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Device-Orientation</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>group___device-_orientation.html</Path>
    <Abstract>For dealing with device orientations.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIIsSupportedOrientation</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>group___device-_orientation.html</Path>
    <Anchor>gad11b7958206db7c5d5a85d78f6d5ce4b</Anchor>
    <Abstract>For use in shouldAutorotateToInterfaceOrientation:</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIInterfaceOrientation</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>group___device-_orientation.html</Path>
    <Anchor>ga7c59ce546cc2e2835532fa9dea2a4869</Anchor>
    <Abstract>Returns the application&amp;#39;s current interface orientation.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Foundation-Methods</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>group___foundation-_methods.html</Path>
    <Abstract>For filling in gaps in Apple&amp;#39;s Foundation framework.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>CGRect-Methods</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>group___c_g_rect-_methods.html</Path>
    <Abstract>For manipulating CGRects.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIRectContract</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>group___c_g_rect-_methods.html</Path>
    <Anchor>ga931be414630989f17e57381643459857</Anchor>
    <Abstract>Modifies only the right and bottom edges of a CGRect.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIRectShift</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>group___c_g_rect-_methods.html</Path>
    <Anchor>gabcfc5613fd39ec197b2b2f6377d7d1b2</Anchor>
    <Abstract>Modifies only the top and left edges of a CGRect.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIRectInset</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>group___c_g_rect-_methods.html</Path>
    <Anchor>ga6be0b565e24d85481bbecbdb3635993f</Anchor>
    <Abstract>Add the insets to a CGRect - equivalent to padding in CSS.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NSRange-Methods</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>group___n_s_range-_methods.html</Path>
    <Abstract>For manipulating NSRange.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIMakeNSRangeFromCFRange</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>group___n_s_range-_methods.html</Path>
    <Anchor>ga77e0126e3a06cedd946d9307d286c55b</Anchor>
    <Abstract>Create an NSRange object from a CFRange object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>In-Memory-Caches</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>group___in-_memory-_caches.html</Path>
    <Abstract>For storing and accessing objects in memory.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NimbusCore</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>group___nimbus_core.html</Path>
    <Abstract>Nimbus&amp;#39; Core defines the foundation upon which all other Nimbus features are built.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Network-Activity</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>group___network-_activity.html</Path>
    <Abstract>For showing network activity in the device&amp;#39;s status bar.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NINetworkActivityTaskDidStart</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>group___network-_activity.html</Path>
    <Anchor>ga891e92e9a0937f27411fa6413f30cdfa</Anchor>
    <Abstract>Increment the number of active network tasks.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NINetworkActivityTaskDidFinish</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>group___network-_activity.html</Path>
    <Anchor>gac403d3b1b127ca02ac65ab38b3cc7f5d</Anchor>
    <Abstract>Decrement the number of active network tasks.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIEnableNetworkActivityDebugging</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>group___network-_activity.html</Path>
    <Anchor>ga407c75bc669bcbb55604bdb64f4e9030</Anchor>
    <Abstract>Enable network activity debugging.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIDisableNetworkActivityDebugging</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>group___network-_activity.html</Path>
    <Anchor>gae76fb8b8a0a7ec02854b656962fde118</Anchor>
    <Abstract>Disable network activity debugging.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Non-Empty-Collection-Testing</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>group___non-_empty-_collection-_testing.html</Path>
    <Abstract>For testing whether a collection is of a certain type and is non-empty.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIIsArrayWithObjects</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>group___non-_empty-_collection-_testing.html</Path>
    <Anchor>ga567f748c399da8a4393884242f3da4ba</Anchor>
    <Abstract>Tests if an object is a non-nil array which is not empty.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIIsSetWithObjects</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>group___non-_empty-_collection-_testing.html</Path>
    <Anchor>ga78e594e9575335f97fd00f5252c73ae5</Anchor>
    <Abstract>Tests if an object is a non-nil set which is not empty.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIIsStringWithAnyText</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>group___non-_empty-_collection-_testing.html</Path>
    <Anchor>ga8a7eaa0c885803d11397e454631cc175</Anchor>
    <Abstract>Tests if an object is a non-nil string which is not empty.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Non-Retaining-Collections</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>group___non-_retaining-_collections.html</Path>
    <Abstract>For collections that don&amp;#39;t retain their objects.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NICreateNonRetainingMutableArray</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>group___non-_retaining-_collections.html</Path>
    <Anchor>gaac64ec97e335bdc4510454b96401c428</Anchor>
    <Abstract>Creates a mutable array which does not retain references to the objects it contains.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NICreateNonRetainingMutableDictionary</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>group___non-_retaining-_collections.html</Path>
    <Anchor>ga7d8bc03279587a225edb68c321d78d5b</Anchor>
    <Abstract>Creates a mutable dictionary which does not retain references to the values it contains.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NICreateNonRetainingMutableSet</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>group___non-_retaining-_collections.html</Path>
    <Anchor>ga8e9ffb851ec72ac6be2cc895b35470dc</Anchor>
    <Abstract>Creates a mutable set which does not retain references to the values it contains.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Operations</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>group___operations.html</Path>
    <Abstract>For common NSOperation implementations.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Crafting-Operations</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>group___crafting-_operations.html</Path>
    <Abstract>For crafting operations.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Paths</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>group___paths.html</Path>
    <Abstract>For creating standard system paths.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIPathForBundleResource</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>group___paths.html</Path>
    <Anchor>gae830aca759474dfce53aee898ebaf0df</Anchor>
    <Abstract>Create a path with the given bundle and the relative path appended.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIPathForDocumentsResource</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>group___paths.html</Path>
    <Anchor>ga375fcba480fc66d69cd3e6a6aa71ba4d</Anchor>
    <Abstract>Create a path with the documents directory and the relative path appended.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Preprocessor-Macros</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>group___preprocessor-_macros.html</Path>
    <Abstract>For generating code where methods can&amp;#39;t be used.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>__NI_DEPRECATED_METHOD</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>group___preprocessor-_macros.html</Path>
    <Anchor>ga8705189f505d9a1934dc181ccc7326f4</Anchor>
    <Abstract>Mark a method or property as deprecated to the compiler.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NI_FIX_CATEGORY_BUG</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>group___preprocessor-_macros.html</Path>
    <Anchor>ga55ff03b06ecaecaf3c88463ebd81b9a6</Anchor>
    <Abstract>Force a category to be loaded when an app starts up.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NI_RELEASE_SAFELY</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>group___preprocessor-_macros.html</Path>
    <Anchor>ga5d2e99251aeb3ddb687e27f72336e5db</Anchor>
    <Abstract>Release and assign nil to an object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Runtime-Class-Modifications</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>group___runtime-_class-_modifications.html</Path>
    <Abstract>For modifying class implementations at runtime.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NISwapInstanceMethods</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>group___runtime-_class-_modifications.html</Path>
    <Anchor>gac41d32344f050e0adc00a6ccc7e67b4e</Anchor>
    <Abstract>Swap two class instance method implementations.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NISwapClassMethods</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>group___runtime-_class-_modifications.html</Path>
    <Anchor>ga302d1fc7a63a4b8737b3ebd0efe656de</Anchor>
    <Abstract>Swap two class method implementations.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SDK-Availability</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>group___s_d_k-_availability.html</Path>
    <Abstract>For checking SDK feature availibility.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIIOS_2_0</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>group___s_d_k-_availability.html</Path>
    <Anchor>gacc9cff6951a25df1bf4cd3bd90183e3c</Anchor>
    <Abstract>Released on July 11, 2008.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIIOS_2_1</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>group___s_d_k-_availability.html</Path>
    <Anchor>gae1525331a18184988b12889e1f2d5a19</Anchor>
    <Abstract>Released on September 9, 2008.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIIOS_2_2</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>group___s_d_k-_availability.html</Path>
    <Anchor>ga5705e2f1066b0394a41694de13680550</Anchor>
    <Abstract>Released on November 21, 2008.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIIOS_3_0</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>group___s_d_k-_availability.html</Path>
    <Anchor>gadc03746bbf3381d282a351e68fb77ee5</Anchor>
    <Abstract>Released on June 17, 2009.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIIOS_3_1</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>group___s_d_k-_availability.html</Path>
    <Anchor>ga45071706dd9d5fbd674d5a5c41736df1</Anchor>
    <Abstract>Released on September 9, 2009.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIIOS_3_2</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>group___s_d_k-_availability.html</Path>
    <Anchor>gaa1c10d7973e40b02bd17c785469c6c54</Anchor>
    <Abstract>Released on April 3, 2010.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIIOS_4_0</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>group___s_d_k-_availability.html</Path>
    <Anchor>gaefa9afe559100406762edfff8909d083</Anchor>
    <Abstract>Released on June 21, 2010.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIIOS_4_1</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>group___s_d_k-_availability.html</Path>
    <Anchor>ga004a7684048dd6a87e6e170fa56b5d9a</Anchor>
    <Abstract>Released on September 8, 2010.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIIOS_4_2</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>group___s_d_k-_availability.html</Path>
    <Anchor>gae75f0a7cca0fbe0de7e1b68c55ef9ddf</Anchor>
    <Abstract>Released on November 22, 2010.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIIOS_4_3</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>group___s_d_k-_availability.html</Path>
    <Anchor>gaaa53475c5fefe5a0b7e9db448ec0df79</Anchor>
    <Abstract>Released on March 9, 2011.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIIOS_5_0</Name>
      <APILanguage>c</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>group___s_d_k-_availability.html</Path>
    <Anchor>gab590d6daaa8e1c7b8fac784bd7093ab8</Anchor>
    <Abstract>Release TBD.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIIsPad</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>group___s_d_k-_availability.html</Path>
    <Anchor>gaf7d2c830b4c39cfeeb37d59258abb722</Anchor>
    <Abstract>Checks whether the device the app is currently running on is an iPad or not.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIDeviceOSVersionIsAtLeast</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>group___s_d_k-_availability.html</Path>
    <Anchor>ga93ac73a742aea0dd9c07562056bf29c4</Anchor>
    <Abstract>Checks whether the device&amp;#39;s OS version is at least the given version number.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIScreenScale</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>group___s_d_k-_availability.html</Path>
    <Anchor>ga90dc63555a6a6ed33b5875c5eaeccb31</Anchor>
    <Abstract>Fetch the screen&amp;#39;s scale in an SDK-agnostic way.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIUIPopoverControllerClass</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>group___s_d_k-_availability.html</Path>
    <Anchor>gab7b9a8279ba3c54d6654f11f69dbd6f0</Anchor>
    <Abstract>Safely fetch the UIPopoverController class if it is available.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIUITapGestureRecognizerClass</Name>
      <APILanguage>c</APILanguage>
      <Type>func</Type>
    </TokenIdentifier>
    <Path>group___s_d_k-_availability.html</Path>
    <Anchor>ga622ef4a203e625618b9077c9b1deca24</Anchor>
    <Abstract>Safely fetch the UITapGestureRecognizer class if it is available.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Core-State</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>group___core-_state.html</Path>
    <Abstract>For modifying Nimbus state information.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Version-History</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>group___version-_history.html</Path>
    <Abstract>Presented here are the API diffs for each major release of Nimbus.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Version-3-to-4</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>group___version-3-to-4.html</Path>
    <Abstract>Version 0.4 of Nimbus was released on July 20, 2011.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Version-3</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>group___version-3.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Version-2</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>group___version-2.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Version-1</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>group___version-1.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Three20-Migration-Guide</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>group___three20-_migration-_guide.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NimbusLauncher</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>group___nimbus_launcher.html</Path>
    <Abstract>Nimbus&amp;#39; Launcher view and related components.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Launcher-User-Interface</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>group___launcher-_user-_interface.html</Path>
    <Abstract>The views and data containers used to display a launcher user interface.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Launcher-Protocols</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>group___launcher-_protocols.html</Path>
    <Abstract>The delegate and data source protocols that allow the user interface to be simple.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NimbusNetworkImage</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>group___nimbus_network_image.html</Path>
    <Abstract>Image views that load images from the network and efficiently store the result in memory and on disk...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Network-Image-User-Interface</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>group___network-_image-_user-_interface.html</Path>
    <Abstract>The view and protocols used to display a network image.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Network-Image-Requests</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>group___network-_image-_requests.html</Path>
    <Abstract>The network requests that power the network image view.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NimbusPhotos</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>group___nimbus_photos.html</Path>
    <Abstract>Photo viewers are a common, non-trivial feature in many types of iOS apps ranging from simple photo v...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Photos-Views</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>group___photos-_views.html</Path>
    <Abstract>The views and protocols used to display and interact with photos.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Photos-Controllers</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>group___photos-_controllers.html</Path>
    <Abstract>Basic photo album view controller implementations.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NimbusProcessors</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>group___nimbus_processors.html</Path>
    <Abstract>Processors are for performing complex data manipulation on separate threads.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Network-Processors</Name>
      <APILanguage>c</APILanguage>
    </TokenIdentifier>
    <Path>group___network-_processors.html</Path>
    <Abstract>Processors designed specifically for network access.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIHTTPImageRequest</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>NIHTTPImageRequest</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_h_t_t_p_image_request.html</Path>
    <Abstract>A threaded network request for an image that chops up and resizes the image before returning to the U...</Abstract>
    <DeclaredIn>NIHTTPImageRequest.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>imageCropRect</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIHTTPImageRequest</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_h_t_t_p_image_request.html</Path>
    <Anchor>a269bb9693de5df1b6852314ecd62eefa</Anchor>
    <Abstract>x/y, width/height are in percent coordinates.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>imageDisplaySize</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIHTTPImageRequest</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_h_t_t_p_image_request.html</Path>
    <Anchor>ad6389e520bbac3c02e299fc4392f6922</Anchor>
    <Abstract>The size of the image to be displayed on the screen.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>scaleOptions</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIHTTPImageRequest</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_h_t_t_p_image_request.html</Path>
    <Anchor>a11f4b6cc61cceb33a41423c62e4e735c</Anchor>
    <Abstract>Options for modifying the way images are cropped when scaling.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>interpolationQuality</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIHTTPImageRequest</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_h_t_t_p_image_request.html</Path>
    <Anchor>a944c80da8f3884d2d1bbab8bf3efeeef</Anchor>
    <Abstract>The interpolation quality to use when resizing the image.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>imageContentMode</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIHTTPImageRequest</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_h_t_t_p_image_request.html</Path>
    <Anchor>aca396dd63f83234695e9e88a44abf49e</Anchor>
    <Abstract>Determines how to resize and crop the image.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>imageFromSource:withContentMode:cropRect:displaySize:scaleOptions:interpolationQuality:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>NIHTTPImageRequest</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_h_t_t_p_image_request.html</Path>
    <Anchor>a42847898d10e49db4666e7c7fb1a30ef</Anchor>
    <Abstract>Take a source image and resize and crop it according to a set of display properties.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>imageCroppedAndSizedForDisplay</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIHTTPImageRequest</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_h_t_t_p_image_request.html</Path>
    <Anchor>af07c5510fc69a3e88e624ff3c59e0eb3</Anchor>
    <Abstract>Upon completion of the request, this is the chopped and sized result image that should be used for di...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIHTTPRequest</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>NIHTTPRequest</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_h_t_t_p_request.html</Path>
    <Abstract>An implementation of ASIHTTPRequest that uses the core network activity features in Nimbus...</Abstract>
    <DeclaredIn>NIHTTPRequest.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIImageMemoryCache</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>NIImageMemoryCache</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_image_memory_cache.html</Path>
    <Abstract>An in-memory cache for storing images with caps on the total number of pixels.</Abstract>
    <DeclaredIn>NIInMemoryCache.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numberOfPixels</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIImageMemoryCache</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_image_memory_cache.html</Path>
    <Anchor>a40447c10f9dfc71c04bacb51895ba5e8</Anchor>
    <Abstract>The total number of pixels being stored in the cache.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>maxNumberOfPixels</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIImageMemoryCache</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_image_memory_cache.html</Path>
    <Anchor>a44eec58a5fda0ad0390d5e43591c1fec</Anchor>
    <Abstract>The maximum number of pixels this cache may ever store.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>maxNumberOfPixelsUnderStress</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIImageMemoryCache</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_image_memory_cache.html</Path>
    <Anchor>a8e3384e158b74b2f582ee5c26608a7b1</Anchor>
    <Abstract>The maximum number of pixels this cache may store after a call to reduceMemoryUsage.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>count</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIMemoryCache</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_memory_cache.html</Path>
    <Anchor>a7d62c34e4297861c986948bd75156d63</Anchor>
    <Abstract>The number of objects stored in this cache.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIMemoryCache</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_memory_cache.html</Path>
    <Anchor>a39f4b8e789e9034c528deb14f1555d80</Anchor>
    <Abstract>Initialize the cache with zero initial capacity.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithCapacity:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIMemoryCache</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_memory_cache.html</Path>
    <Anchor>a879b58be06ace929185997a92f7bb35b</Anchor>
    <Abstract>Designated initializer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>storeObject:withName:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIMemoryCache</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_memory_cache.html</Path>
    <Anchor>a7bc119332422cd4d36863a5f1d7751bd</Anchor>
    <Abstract>Store an object in the cache.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>storeObject:withName:expiresAfter:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIMemoryCache</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_memory_cache.html</Path>
    <Anchor>acaa6af8abea20907cf230ce1191e7ad4</Anchor>
    <Abstract>Store an object in the cache with an expiration date.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeObjectWithName:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIMemoryCache</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_memory_cache.html</Path>
    <Anchor>a5dab1798d4e3bcd2b686837f63f31d1c</Anchor>
    <Abstract>Remove an object in the cache.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeAllObjects</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIMemoryCache</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_memory_cache.html</Path>
    <Anchor>a26fda388dffc22aa78dd17905a6fce73</Anchor>
    <Abstract>Remove all objects from the cache, regardless of expiration dates.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>objectWithName:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIMemoryCache</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_memory_cache.html</Path>
    <Anchor>afdd7b533b55c5d8753078e207ec0a9d7</Anchor>
    <Abstract>Retrieve an object from the cache.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasObjectWithName:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIMemoryCache</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_memory_cache.html</Path>
    <Anchor>a10ca55440e796c6f51187041cf6b8152</Anchor>
    <Abstract>Determine whether an object is in the cache or not without modifying the access time.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dateOfLastAccessWithName:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIMemoryCache</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_memory_cache.html</Path>
    <Anchor>a6c016c9a322c58151bbfb30793e9d475</Anchor>
    <Abstract>Retrieve the data that the object with the given name was last accessed.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reduceMemoryUsage</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIMemoryCache</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_memory_cache.html</Path>
    <Anchor>a8164a276bcc012398b4025d45fe597d2</Anchor>
    <Abstract>Remove all expired objects from the cache.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>willSetObject:withName:previousObject:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIMemoryCache</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_memory_cache.html</Path>
    <Anchor>ae1aac8c4de4609814f7f24440cca011f</Anchor>
    <Abstract>An object is about to be stored in the cache.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>didSetObject:withName:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIMemoryCache</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_memory_cache.html</Path>
    <Anchor>ad803d84fcd1c29cf2dadb58c3f719923</Anchor>
    <Abstract>An object has been stored in the cache.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>willRemoveObject:withName:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIMemoryCache</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_memory_cache.html</Path>
    <Anchor>a07a3aa62d34f2cae0c4c76668de9608e</Anchor>
    <Abstract>An object is about to be removed from the cache.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIJSONKitProcessorHTTPRequest</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>NIJSONKitProcessorHTTPRequest</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_j_s_o_n_kit_processor_h_t_t_p_request.html</Path>
    <Abstract>A processor that uses JSONKit to turn the JSON response into objects.</Abstract>
    <DeclaredIn>NIJSONKitProcessorHTTPRequest.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processedObject</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIProcessorHTTPRequest</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_processor_h_t_t_p_request.html</Path>
    <Anchor>a079aadcb5f4ea692ad4f89f71a41f82d</Anchor>
    <Abstract>The resulting root object after the request has completed and the data has been processed.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processDataBlock</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIProcessorHTTPRequest</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_processor_h_t_t_p_request.html</Path>
    <Anchor>ae7c2909f0df1cd0ff2530b74fa458a3f</Anchor>
    <Abstract>The second step in the processing order for the data.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processorDelegate</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIProcessorHTTPRequest</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_processor_h_t_t_p_request.html</Path>
    <Anchor>a467653946b4e316c00f357fbe6d1cc48</Anchor>
    <Abstract>The final step in the processing order for the data.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>objectFromResponseData:error:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIProcessorHTTPRequest</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_processor_h_t_t_p_request.html</Path>
    <Anchor>af807389013bf372d6693397fd041c0e1</Anchor>
    <Abstract>A subclass should implement this method and transform the data into an object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NILauncherButton</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>NILauncherButton</Scope>
    </TokenIdentifier>
    <Path>class_n_i_launcher_button.html</Path>
    <Abstract>A simple launcher button that shows an image and text.</Abstract>
    <DeclaredIn>NILauncherViewController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>padding</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NILauncherButton</Scope>
    </TokenIdentifier>
    <Path>class_n_i_launcher_button.html</Path>
    <Anchor>a19f85e61da3480d9209058b450afaa82</Anchor>
    <Abstract>The padding for the button.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NILauncherDataSource</Name>
      <APILanguage>c</APILanguage>
      <Type>intf</Type>
      <Scope>NILauncherDataSource</Scope>
    </TokenIdentifier>
    <Path>protocol_n_i_launcher_data_source-p.html</Path>
    <Abstract>The launcher data source used to populate the view.</Abstract>
    <DeclaredIn>NILauncherView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buttonDimensionsInLauncherView:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NILauncherDataSource-p</Scope>
    </TokenIdentifier>
    <Path>protocol_n_i_launcher_data_source-p.html</Path>
    <Anchor>aef59561eb420c3699d5c5b3dbe0cb16d</Anchor>
    <Abstract>Override the default button dimensions 80x80.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numberOfRowsPerPageInLauncherView:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NILauncherDataSource-p</Scope>
    </TokenIdentifier>
    <Path>protocol_n_i_launcher_data_source-p.html</Path>
    <Anchor>ace9be595b80fb6d52e4d94a550748f54</Anchor>
    <Abstract>Override the default number of rows which is dynamically calculated.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numberOfColumnsPerPageInLauncherView:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NILauncherDataSource-p</Scope>
    </TokenIdentifier>
    <Path>protocol_n_i_launcher_data_source-p.html</Path>
    <Anchor>acfc94919beaa588ef131d9d7beecf7f9</Anchor>
    <Abstract>Override the default number of columns which is dynamically calculated.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numberOfPagesInLauncherView:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NILauncherDataSource-p</Scope>
    </TokenIdentifier>
    <Path>protocol_n_i_launcher_data_source-p.html</Path>
    <Anchor>a7386f18ee064778a4808a26a3cf06f41</Anchor>
    <Abstract>The total number of pages to be shown in the launcher view.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>launcherView:numberOfButtonsInPage:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NILauncherDataSource-p</Scope>
    </TokenIdentifier>
    <Path>protocol_n_i_launcher_data_source-p.html</Path>
    <Anchor>ad330b76b58eebe5dde7b7f7495575e2a</Anchor>
    <Abstract>The total number of buttons in a given page.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>launcherView:buttonForPage:atIndex:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NILauncherDataSource-p</Scope>
    </TokenIdentifier>
    <Path>protocol_n_i_launcher_data_source-p.html</Path>
    <Anchor>a2da5ac9e819e16c7ca4410a0497bf2ee</Anchor>
    <Abstract>Retrieve the button to be displayed at a given page and index.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NILauncherDelegate</Name>
      <APILanguage>c</APILanguage>
      <Type>intf</Type>
      <Scope>NILauncherDelegate</Scope>
    </TokenIdentifier>
    <Path>protocol_n_i_launcher_delegate-p.html</Path>
    <Abstract>The launcher delegate used to inform of state changes and user interactions.</Abstract>
    <DeclaredIn>NILauncherView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>launcherView:didSelectButton:onPage:atIndex:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NILauncherDelegate-p</Scope>
    </TokenIdentifier>
    <Path>protocol_n_i_launcher_delegate-p.html</Path>
    <Anchor>a5354d4b3a37c6d1909b785cc4be2ac7c</Anchor>
    <Abstract>Called when the user taps and releases a launcher button.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NILauncherItemDetails</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>NILauncherItemDetails</Scope>
    </TokenIdentifier>
    <Path>class_n_i_launcher_item_details.html</Path>
    <Abstract>A convenience class for managing the data used to create an NILauncherButton.</Abstract>
    <DeclaredIn>NILauncherViewController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>title</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NILauncherItemDetails</Scope>
    </TokenIdentifier>
    <Path>class_n_i_launcher_item_details.html</Path>
    <Anchor>abe184a56d23b572e49ddc3451f9e06ba</Anchor>
    <Abstract>The title for the launcher button.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>imagePath</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NILauncherItemDetails</Scope>
    </TokenIdentifier>
    <Path>class_n_i_launcher_item_details.html</Path>
    <Anchor>a5d62475d047295f77e825833721ed6c9</Anchor>
    <Abstract>The path to the launcher image.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>itemDetailsWithTitle:imagePath:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>NILauncherItemDetails</Scope>
    </TokenIdentifier>
    <Path>class_n_i_launcher_item_details.html</Path>
    <Anchor>a0fa897dde241f7de94d531ccc242befa</Anchor>
    <Abstract>Convenience method for creating a launcher item details object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithTitle:imagePath:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NILauncherItemDetails</Scope>
    </TokenIdentifier>
    <Path>class_n_i_launcher_item_details.html</Path>
    <Anchor>afe62c8eb25254b87f227547cd0c7457b</Anchor>
    <Abstract>The designated initializer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NILauncherView</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>NILauncherView</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_launcher_view.html</Path>
    <Abstract>A launcher view that simulates iOS&amp;#39; home screen launcher functionality.</Abstract>
    <DeclaredIn>NILauncherView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>padding</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NILauncherView</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_launcher_view.html</Path>
    <Anchor>af8767bdd838ce4b0b8959331ccecfb8f</Anchor>
    <Abstract>The amount of padding on each side of the launcher view pages.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>delegate</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NILauncherView</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_launcher_view.html</Path>
    <Anchor>a5680da202a46fb3ce6437d6987a7d41d</Anchor>
    <Abstract>The launcher view notifies the delegate of any user interaction or state changes.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dataSource</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NILauncherView</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_launcher_view.html</Path>
    <Anchor>af849642b45b213adbd85e85054925428</Anchor>
    <Abstract>The launcher view populates its pages with information from the data source.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reloadData</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NILauncherView</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_launcher_view.html</Path>
    <Anchor>a00cd8720501ea27c466fa6e2201d41d4</Anchor>
    <Abstract>Reload the launcher data.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrame:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NILauncherView</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_launcher_view.html</Path>
    <Anchor>a37761e0617ece5ef925ea575647a8620</Anchor>
    <Abstract>Lays out the subviews for this launcher view.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NILauncherViewController</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>NILauncherViewController</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_launcher_view_controller.html</Path>
    <Abstract>A view controller that displays a launcher view and implements its protocols.</Abstract>
    <DeclaredIn>NILauncherViewController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pages</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NILauncherViewController</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_launcher_view_controller.html</Path>
    <Anchor>ae6d4791037f7aec351b814ebc0dfad00</Anchor>
    <Abstract>An array of arrays of NILauncherItemDetails.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>launcherView:didSelectButton:onPage:atIndex:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NILauncherDelegate-p</Scope>
    </TokenIdentifier>
    <Path>protocol_n_i_launcher_delegate-p.html</Path>
    <Anchor>a5354d4b3a37c6d1909b785cc4be2ac7c</Anchor>
    <Abstract>Called when the user taps and releases a launcher button.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>buttonDimensionsInLauncherView:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NILauncherDataSource-p</Scope>
    </TokenIdentifier>
    <Path>protocol_n_i_launcher_data_source-p.html</Path>
    <Anchor>aef59561eb420c3699d5c5b3dbe0cb16d</Anchor>
    <Abstract>Override the default button dimensions 80x80.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numberOfRowsPerPageInLauncherView:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NILauncherDataSource-p</Scope>
    </TokenIdentifier>
    <Path>protocol_n_i_launcher_data_source-p.html</Path>
    <Anchor>ace9be595b80fb6d52e4d94a550748f54</Anchor>
    <Abstract>Override the default number of rows which is dynamically calculated.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numberOfColumnsPerPageInLauncherView:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NILauncherDataSource-p</Scope>
    </TokenIdentifier>
    <Path>protocol_n_i_launcher_data_source-p.html</Path>
    <Anchor>acfc94919beaa588ef131d9d7beecf7f9</Anchor>
    <Abstract>Override the default number of columns which is dynamically calculated.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numberOfPagesInLauncherView:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NILauncherDataSource-p</Scope>
    </TokenIdentifier>
    <Path>protocol_n_i_launcher_data_source-p.html</Path>
    <Anchor>a7386f18ee064778a4808a26a3cf06f41</Anchor>
    <Abstract>The total number of pages to be shown in the launcher view.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>launcherView:numberOfButtonsInPage:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NILauncherDataSource-p</Scope>
    </TokenIdentifier>
    <Path>protocol_n_i_launcher_data_source-p.html</Path>
    <Anchor>ad330b76b58eebe5dde7b7f7495575e2a</Anchor>
    <Abstract>The total number of buttons in a given page.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>launcherView:buttonForPage:atIndex:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NILauncherDataSource-p</Scope>
    </TokenIdentifier>
    <Path>protocol_n_i_launcher_data_source-p.html</Path>
    <Anchor>a2da5ac9e819e16c7ca4410a0497bf2ee</Anchor>
    <Abstract>Retrieve the button to be displayed at a given page and index.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>launcherButtonClass</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NILauncherViewController</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_launcher_view_controller.html</Path>
    <Anchor>a21629435d3eea13bb429361dae2ac0b5</Anchor>
    <Abstract>The launcher button view class.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NILinkedList</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>NILinkedList</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_linked_list.html</Path>
    <Abstract>A singly linked list implementation.</Abstract>
    <DeclaredIn>NIDataStructures.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>firstObject</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NILinkedList</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_linked_list.html</Path>
    <Anchor>aa2527b210de77fde4dd5b99d94ebaba6</Anchor>
    <Abstract>The first object in the linked list.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lastObject</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NILinkedList</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_linked_list.html</Path>
    <Anchor>a7c0066b07b3753ba3abab3ef7b49673c</Anchor>
    <Abstract>The last object in the linked list.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>count</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NILinkedList</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_linked_list.html</Path>
    <Anchor>a91782fdbe13bf28a662784568ffdca43</Anchor>
    <Abstract>The number of objects in the linked list.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NILinkedList</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_linked_list.html</Path>
    <Anchor>a8bdb25b42516d25a0910d2b3f5dafd1c</Anchor>
    <Abstract>Designated initializer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>linkedList</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>NILinkedList</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_linked_list.html</Path>
    <Anchor>a33b030b2a3c23c237735d347e7bfbeea</Anchor>
    <Abstract>Convenience method for creating an autoreleased linked list.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>addObject:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NILinkedList</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_linked_list.html</Path>
    <Anchor>a424313c1e697b5ba6a136be7a7d8dd3e</Anchor>
    <Abstract>Append an object to the linked list.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeAllObjects</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NILinkedList</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_linked_list.html</Path>
    <Anchor>add49cd92d036f3fa6bce44cbb12287e7</Anchor>
    <Abstract>Remove all objects from the linked list.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeObject:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NILinkedList</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_linked_list.html</Path>
    <Anchor>a8662894eef060157e9f25af267d0242f</Anchor>
    <Abstract>Remove an object from the linked list.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeFirstObject</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NILinkedList</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_linked_list.html</Path>
    <Anchor>acf58608c591cd3350d92a51520ec5c56</Anchor>
    <Abstract>Remove the first object from the linked list.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeLastObject</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NILinkedList</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_linked_list.html</Path>
    <Anchor>ac6e78ad1db0893fb12421c309f2b6c09</Anchor>
    <Abstract>Remove the last object from the linked list.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>locationOfObject:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NILinkedList</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_linked_list.html</Path>
    <Anchor>a2446ec1db7456c41e3b27bf234b3dc62</Anchor>
    <Abstract>Search for an object in the linked list.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>objectAtLocation:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NILinkedList</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_linked_list.html</Path>
    <Anchor>a459824a248ba4917d0434643f29fd5f4</Anchor>
    <Abstract>Retrieve the object at a specific location.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeObjectAtLocation:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NILinkedList</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_linked_list.html</Path>
    <Anchor>a34f62252fbfc6df20e115e7c4d17031f</Anchor>
    <Abstract>Remove an object at a predetermined location.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Nimbus</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>Nimbus</Scope>
    </TokenIdentifier>
    <Path>interface_nimbus.html</Path>
    <Abstract>The Nimbus state interface.</Abstract>
    <DeclaredIn>NIState.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>imageMemoryCache</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>Nimbus</Scope>
    </TokenIdentifier>
    <Path>interface_nimbus.html</Path>
    <Anchor>a3c0417e0cf4a64e6d8004346fc744ce3</Anchor>
    <Abstract>Access the global image memory cache.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>networkOperationQueue</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>Nimbus</Scope>
    </TokenIdentifier>
    <Path>interface_nimbus.html</Path>
    <Anchor>a1b76dec78c8c30a174aaea7a6f859b8e</Anchor>
    <Abstract>Access the global network operation queue.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setImageMemoryCache:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>Nimbus</Scope>
    </TokenIdentifier>
    <Path>interface_nimbus.html</Path>
    <Anchor>a342e309249ac5309fb6feb238da6630e</Anchor>
    <Abstract>Set the global image memory cache.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setNetworkOperationQueue:</Name>
      <APILanguage>occ</APILanguage>
      <Type>clm</Type>
      <Scope>Nimbus</Scope>
    </TokenIdentifier>
    <Path>interface_nimbus.html</Path>
    <Anchor>ae74df4b59708c91c251273369a3c4caf</Anchor>
    <Abstract>Set the global network operation queue.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIMemoryCache</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>NIMemoryCache</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_memory_cache.html</Path>
    <Abstract>An in-memory cache for storing objects with expiration support.</Abstract>
    <DeclaredIn>NIInMemoryCache.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>count</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIMemoryCache</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_memory_cache.html</Path>
    <Anchor>a7d62c34e4297861c986948bd75156d63</Anchor>
    <Abstract>The number of objects stored in this cache.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIMemoryCache</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_memory_cache.html</Path>
    <Anchor>a39f4b8e789e9034c528deb14f1555d80</Anchor>
    <Abstract>Initialize the cache with zero initial capacity.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithCapacity:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIMemoryCache</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_memory_cache.html</Path>
    <Anchor>a879b58be06ace929185997a92f7bb35b</Anchor>
    <Abstract>Designated initializer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>storeObject:withName:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIMemoryCache</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_memory_cache.html</Path>
    <Anchor>a7bc119332422cd4d36863a5f1d7751bd</Anchor>
    <Abstract>Store an object in the cache.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>storeObject:withName:expiresAfter:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIMemoryCache</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_memory_cache.html</Path>
    <Anchor>acaa6af8abea20907cf230ce1191e7ad4</Anchor>
    <Abstract>Store an object in the cache with an expiration date.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeObjectWithName:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIMemoryCache</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_memory_cache.html</Path>
    <Anchor>a5dab1798d4e3bcd2b686837f63f31d1c</Anchor>
    <Abstract>Remove an object in the cache.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeAllObjects</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIMemoryCache</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_memory_cache.html</Path>
    <Anchor>a26fda388dffc22aa78dd17905a6fce73</Anchor>
    <Abstract>Remove all objects from the cache, regardless of expiration dates.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>objectWithName:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIMemoryCache</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_memory_cache.html</Path>
    <Anchor>afdd7b533b55c5d8753078e207ec0a9d7</Anchor>
    <Abstract>Retrieve an object from the cache.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasObjectWithName:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIMemoryCache</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_memory_cache.html</Path>
    <Anchor>a10ca55440e796c6f51187041cf6b8152</Anchor>
    <Abstract>Determine whether an object is in the cache or not without modifying the access time.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dateOfLastAccessWithName:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIMemoryCache</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_memory_cache.html</Path>
    <Anchor>a6c016c9a322c58151bbfb30793e9d475</Anchor>
    <Abstract>Retrieve the data that the object with the given name was last accessed.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reduceMemoryUsage</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIMemoryCache</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_memory_cache.html</Path>
    <Anchor>a8164a276bcc012398b4025d45fe597d2</Anchor>
    <Abstract>Remove all expired objects from the cache.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>willSetObject:withName:previousObject:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIMemoryCache</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_memory_cache.html</Path>
    <Anchor>ae1aac8c4de4609814f7f24440cca011f</Anchor>
    <Abstract>An object is about to be stored in the cache.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>didSetObject:withName:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIMemoryCache</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_memory_cache.html</Path>
    <Anchor>ad803d84fcd1c29cf2dadb58c3f719923</Anchor>
    <Abstract>An object has been stored in the cache.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>willRemoveObject:withName:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIMemoryCache</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_memory_cache.html</Path>
    <Anchor>a07a3aa62d34f2cae0c4c76668de9608e</Anchor>
    <Abstract>An object is about to be removed from the cache.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIMemoryCacheInfo</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>NIMemoryCacheInfo</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_memory_cache_info.html</Path>
    <Abstract>A single cache item&amp;#39;s information.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>name</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIMemoryCacheInfo</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_memory_cache_info.html</Path>
    <Anchor>aacf9857f5788e5a989d0ce9b446a32ee</Anchor>
    <Abstract>The name used to store this object in the cache.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>object</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIMemoryCacheInfo</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_memory_cache_info.html</Path>
    <Anchor>aed8c006ce8d5d959170b0c0b8c2c830d</Anchor>
    <Abstract>The object stored in the cache.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>expirationDate</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIMemoryCacheInfo</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_memory_cache_info.html</Path>
    <Anchor>aae1dd44b6572518d4386b24911407865</Anchor>
    <Abstract>The date after which the image is no longer valid and should be removed from the cache.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lastAccessTime</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIMemoryCacheInfo</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_memory_cache_info.html</Path>
    <Anchor>a5df65400aecde4270f65396746022494</Anchor>
    <Abstract>The last time this image was accessed.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lruLocation</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIMemoryCacheInfo</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_memory_cache_info.html</Path>
    <Anchor>a9ba696a78128653d7d2f5208416d6bb0</Anchor>
    <Abstract>The location of this object in the least-recently used linked list.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasExpired</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIMemoryCacheInfo</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_memory_cache_info.html</Path>
    <Anchor>ae854ab244f76213c32704ead39bd3e2a</Anchor>
    <Abstract>Determine whether this cache entry has past its expiration date.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NINetworkImageView</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>NINetworkImageView</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_network_image_view.html</Path>
    <Abstract>A network-enabled image view that consumes minimal amounts of memory.</Abstract>
    <DeclaredIn>NINetworkImageView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initialImage</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NINetworkImageView</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_network_image_view.html</Path>
    <Anchor>ad7c89b7d5586d247d9a01c953000ad6f</Anchor>
    <Abstract>The image being displayed while the network image is being fetched.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>memoryCachePrefix</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NINetworkImageView</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_network_image_view.html</Path>
    <Anchor>a352ecee4de738eff827447d637fd2c5a</Anchor>
    <Abstract>A prefix for the memory cache key.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lastPathToNetworkImage</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NINetworkImageView</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_network_image_view.html</Path>
    <Anchor>a576b2950355e43205c35700091d74dc3</Anchor>
    <Abstract>The last path assigned to the image view.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isLoading</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NINetworkImageView</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_network_image_view.html</Path>
    <Anchor>aa3207a010aa79b94a894e60105f4b7a6</Anchor>
    <Abstract>Whether there is an active request for this image view.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>delegate</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NINetworkImageView</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_network_image_view.html</Path>
    <Anchor>a7e60fd5a2b8c3fc57c92f24fc7dca8d3</Anchor>
    <Abstract>Delegate for state change notifications.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithImage:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NINetworkImageView</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_network_image_view.html</Path>
    <Anchor>ade5eba04aa860207d1fbd07a3f3a31ef</Anchor>
    <Abstract>Designated initializer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prepareForReuse</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NINetworkImageView</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_network_image_view.html</Path>
    <Anchor>a7cce26c40c058f1c8b7265b971b2abc5</Anchor>
    <Abstract>Kill any network requests and replace the displayed image with the initial image.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>sizeForDisplay</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NINetworkImageView</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_network_image_view.html</Path>
    <Anchor>acafe40b5cfb6e75848a8f91f3f8b9e51</Anchor>
    <Abstract>A flag for enabling the resizing of images for display.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>scaleOptions</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NINetworkImageView</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_network_image_view.html</Path>
    <Anchor>a7faef9d6a8e6e3a5886cf88c0262d4e1</Anchor>
    <Abstract>Options for modifying the way images are cropped when scaling.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>interpolationQuality</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NINetworkImageView</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_network_image_view.html</Path>
    <Anchor>adc399e63572dcce6e0984ef12353ec4d</Anchor>
    <Abstract>The interpolation quality to use when resizing the image.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>imageMemoryCache</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NINetworkImageView</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_network_image_view.html</Path>
    <Anchor>a8f43300cafa80378ee333a5cb8551b22</Anchor>
    <Abstract>The image memory cache used by this image view to store the image in memory.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>imageDiskCache</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NINetworkImageView</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_network_image_view.html</Path>
    <Anchor>af331d0f41ba2509b2edfcc437aadc3a6</Anchor>
    <Abstract>The image disk cache used by this image view to store the image on disk.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>networkOperationQueue</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NINetworkImageView</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_network_image_view.html</Path>
    <Anchor>a690fae40ceeaa8304dea5177b9d48e2a</Anchor>
    <Abstract>The network operation queue used by this image view to load the image from network and disk...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>maxAge</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NINetworkImageView</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_network_image_view.html</Path>
    <Anchor>a7b9356e33ed3ad110b0a08290b4f1a27</Anchor>
    <Abstract>The maximum amount of time that an image will stay in memory after the request completes.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>diskCacheLifetime</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NINetworkImageView</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_network_image_view.html</Path>
    <Anchor>a0432bac81c750d0e9fa0d23329eed93f</Anchor>
    <Abstract>The lifetime for an image stored in the disk cache.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPathToNetworkImage:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NINetworkImageView</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_network_image_view.html</Path>
    <Anchor>af0531138d9eb4de6275b3704b7e293c2</Anchor>
    <Abstract>Load an image from the network using the current frame as the display size.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPathToNetworkImage:forDisplaySize:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NINetworkImageView</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_network_image_view.html</Path>
    <Anchor>aafcf782b4bbcbd2d40b1693bca72b67a</Anchor>
    <Abstract>Load an image from the network with a specific display size.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPathToNetworkImage:forDisplaySize:contentMode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NINetworkImageView</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_network_image_view.html</Path>
    <Anchor>a0fe80155480019a31d7be5d3d8ae07ca</Anchor>
    <Abstract>Load an image from the network with a specific display size.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPathToNetworkImage:cropRect:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NINetworkImageView</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_network_image_view.html</Path>
    <Anchor>a41b5c535e5b5f4a08b227e58485deda5</Anchor>
    <Abstract>Load an image from the network with a crop rect and the current frame as the display size...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPathToNetworkImage:contentMode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NINetworkImageView</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_network_image_view.html</Path>
    <Anchor>ab78dcad711ea2fe46ace504e33f15944</Anchor>
    <Abstract>Load an image from the network with a specific display size.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setPathToNetworkImage:cropRect:forDisplaySize:contentMode:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NINetworkImageView</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_network_image_view.html</Path>
    <Anchor>ab0909160c9d85e5f7f5eb6f9918213a2</Anchor>
    <Abstract>Load an image from the network with a specific display size and crop rect.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>networkImageViewDidStartLoading</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NINetworkImageView</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_network_image_view.html</Path>
    <Anchor>aece340a22833f7a7ceeac8ffc8aa5cb4</Anchor>
    <Abstract>A network request has begun.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>networkImageViewDidLoadImage:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NINetworkImageView</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_network_image_view.html</Path>
    <Anchor>a5fa24c4b0e7aeda332861b681c902c78</Anchor>
    <Abstract>The image has been loaded, either from the network or in-memory.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>networkImageViewDidFailToLoad:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NINetworkImageView</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_network_image_view.html</Path>
    <Anchor>ac6b87d3157c16038705df537e9624a89</Anchor>
    <Abstract>A network request failed to load.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NINetworkImageViewDelegate</Name>
      <APILanguage>c</APILanguage>
      <Type>intf</Type>
      <Scope>NINetworkImageViewDelegate</Scope>
    </TokenIdentifier>
    <Path>protocol_n_i_network_image_view_delegate-p.html</Path>
    <Abstract>The image view delegate used to inform of state changes.</Abstract>
    <DeclaredIn>NINetworkImageView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>networkImageViewDidStartLoad:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NINetworkImageViewDelegate-p</Scope>
    </TokenIdentifier>
    <Path>protocol_n_i_network_image_view_delegate-p.html</Path>
    <Anchor>a7bd8d13ada058216b947c25741631b43</Anchor>
    <Abstract>The image has begun an asynchronous download of the image.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>networkImageView:didLoadImage:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NINetworkImageViewDelegate-p</Scope>
    </TokenIdentifier>
    <Path>protocol_n_i_network_image_view_delegate-p.html</Path>
    <Anchor>a96383c1312874a264d5065594c7bce43</Anchor>
    <Abstract>The image has completed an asynchronous download of the image.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>networkImageViewDidFailLoad:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NINetworkImageViewDelegate-p</Scope>
    </TokenIdentifier>
    <Path>protocol_n_i_network_image_view_delegate-p.html</Path>
    <Anchor>a9f091692ef4ed418c2c9e1e1b642b304</Anchor>
    <Abstract>The asynchronous download failed.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIOperation</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>NIOperation</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_operation.html</Path>
    <Abstract>A base implementation of an NSOperation that supports traditional delegation and blocks.</Abstract>
    <DeclaredIn>NIOperations.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>delegate</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIOperation</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_operation.html</Path>
    <Anchor>a8fcfebd75a9559d0a41e9f8bcd01facf</Anchor>
    <Abstract>The delegate through which changes are notified for this operation.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tag</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIOperation</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_operation.html</Path>
    <Anchor>a3ffdf65e811b47ea8595c8ea2a1376ec</Anchor>
    <Abstract>A simple tagging mechanism for identifying operations.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lastError</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIOperation</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_operation.html</Path>
    <Anchor>add09c9ae4ab576c27648f4a3ab3b9cea</Anchor>
    <Abstract>The error last passed to the didFailWithError notification.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>didStartBlock</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIOperation</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_operation.html</Path>
    <Anchor>a6244b38cedcd4c75360a15b19514321f</Anchor>
    <Abstract>The operation has started executing.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>didFinishBlock</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIOperation</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_operation.html</Path>
    <Anchor>a18e14e4f1f218899b97febe09d48b68d</Anchor>
    <Abstract>The operation has completed successfully.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>didFailWithErrorBlock</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIOperation</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_operation.html</Path>
    <Anchor>a6d1ae5a692180c568ecfd8d3b02300e3</Anchor>
    <Abstract>The operation failed in some way and has completed.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>willFinishBlock</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIOperation</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_operation.html</Path>
    <Anchor>af70a25765166a9b792dc053b7b9378b6</Anchor>
    <Abstract>The operation is about to complete successfully.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operationDidStart</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIOperation</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_operation.html</Path>
    <Anchor>a8c484d9ee1a76ea72b0d3afc0782f8fc</Anchor>
    <Abstract>On the main thread, notify the delegate that the operation has begun.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operationDidFinish</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIOperation</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_operation.html</Path>
    <Anchor>aa348248e667a2f1021f6451cb7cbbc0f</Anchor>
    <Abstract>On the main thread, notify the delegate that the operation has finished.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operationDidFailWithError:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIOperation</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_operation.html</Path>
    <Anchor>abcac75178abd6f277fcac4332bad2976</Anchor>
    <Abstract>On the main thread, notify the delegate that the operation has failed.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operationWillFinish</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIOperation</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_operation.html</Path>
    <Anchor>ac7e636b6ec59af66fc5964c7b30a2930</Anchor>
    <Abstract>In the operation&amp;#39;s thread, notify the delegate that the operation will finish successfully.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIOperationDelegate</Name>
      <APILanguage>c</APILanguage>
      <Type>intf</Type>
      <Scope>NIOperationDelegate</Scope>
    </TokenIdentifier>
    <Path>protocol_n_i_operation_delegate-p.html</Path>
    <Abstract>The delegate protocol for an NSOperation.</Abstract>
    <DeclaredIn>NIOperations.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operationDidStart:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIOperationDelegate-p</Scope>
    </TokenIdentifier>
    <Path>protocol_n_i_operation_delegate-p.html</Path>
    <Anchor>a67316e75bd418453d0ee0626b86f0480</Anchor>
    <Abstract>The operation has started executing.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operationWillFinish:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIOperationDelegate-p</Scope>
    </TokenIdentifier>
    <Path>protocol_n_i_operation_delegate-p.html</Path>
    <Anchor>ab611d7a71a08106becd2f66114b15d8f</Anchor>
    <Abstract>The operation is about to complete successfully.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operationDidFinish:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIOperationDelegate-p</Scope>
    </TokenIdentifier>
    <Path>protocol_n_i_operation_delegate-p.html</Path>
    <Anchor>ac3bf1a396bbc1c4f78f8569ca5df4455</Anchor>
    <Abstract>The operation has completed successfully.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operationDidFail:withError:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIOperationDelegate-p</Scope>
    </TokenIdentifier>
    <Path>protocol_n_i_operation_delegate-p.html</Path>
    <Anchor>a03cc8cc14147e2ad8f2c3e84f9eb11e2</Anchor>
    <Abstract>The operation failed in some way and has completed.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIPhotoAlbumScrollView</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>NIPhotoAlbumScrollView</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_photo_album_scroll_view.html</Path>
    <Abstract>A paged scroll view that shows a collection of photos.</Abstract>
    <DeclaredIn>NIPhotoAlbumScrollView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>dataSource</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIPhotoAlbumScrollView</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_photo_album_scroll_view.html</Path>
    <Anchor>a763ac9859c692caac4232135ce22792d</Anchor>
    <Abstract>The data source for this photo album view.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reloadData</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIPhotoAlbumScrollView</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_photo_album_scroll_view.html</Path>
    <Anchor>a499e3a1855ebae051598afde7fdc2c3c</Anchor>
    <Abstract>Force the view to reload its data by asking the data source for information.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>delegate</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIPhotoAlbumScrollView</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_photo_album_scroll_view.html</Path>
    <Anchor>a992a9408b06190db98f14da4071fe4f4</Anchor>
    <Abstract>The delegate for this photo album view.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>loadingImage</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIPhotoAlbumScrollView</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_photo_album_scroll_view.html</Path>
    <Anchor>a5efc3ce3a183043fe3d6341ae82908cc</Anchor>
    <Abstract>An image that is displayed while the photo is loading.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pageHorizontalMargin</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIPhotoAlbumScrollView</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_photo_album_scroll_view.html</Path>
    <Anchor>affaad3ec044e3e8f354271a81d723f19</Anchor>
    <Abstract>The number of pixels on either side of each photo page.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>currentCenterPhotoIndex</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIPhotoAlbumScrollView</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_photo_album_scroll_view.html</Path>
    <Anchor>a727d4a7ad102caadc455e4fffddc8589</Anchor>
    <Abstract>The current center photo index.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numberOfPhotos</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIPhotoAlbumScrollView</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_photo_album_scroll_view.html</Path>
    <Anchor>aa6f3fca130a6cb8358fde37e33a28fe2</Anchor>
    <Abstract>The total number of photos in this photo album view, as gathered from the data source.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasNext</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIPhotoAlbumScrollView</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_photo_album_scroll_view.html</Path>
    <Anchor>a3e3b947a25bec57aed70afb27d809471</Anchor>
    <Abstract>Returns YES if there is a next photo.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hasPrevious</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIPhotoAlbumScrollView</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_photo_album_scroll_view.html</Path>
    <Anchor>a5ce7a3118a9b14539afffa572f75a434</Anchor>
    <Abstract>Returns YES if there is a previous photo.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>moveToNextAnimated:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIPhotoAlbumScrollView</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_photo_album_scroll_view.html</Path>
    <Anchor>a7d6595ba06e27bd5b24868c4fffd6f41</Anchor>
    <Abstract>Move to the next photo if there is one.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>moveToPreviousAnimated:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIPhotoAlbumScrollView</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_photo_album_scroll_view.html</Path>
    <Anchor>a56349352b0b9a6a045727c0745397a5e</Anchor>
    <Abstract>Move to the previous photo if there is one.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>didLoadPhoto:atIndex:photoSize:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIPhotoAlbumScrollView</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_photo_album_scroll_view.html</Path>
    <Anchor>a8b53749aec990645b6502376cd41558c</Anchor>
    <Abstract>Notify the scroll view that a photo has been loaded at a given index.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>willRotateToInterfaceOrientation:duration:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIPhotoAlbumScrollView</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_photo_album_scroll_view.html</Path>
    <Anchor>ad8c49847a8e40845c7568c66c6d03cc5</Anchor>
    <Abstract>Stores the current state of the scroll view in preparation for rotation.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>willAnimateRotationToInterfaceOrientation:duration:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIPhotoAlbumScrollView</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_photo_album_scroll_view.html</Path>
    <Anchor>a8fc80777983d64c632b64ac32d03eb49</Anchor>
    <Abstract>Updates the frame of the scroll view while maintaining the current visible page&amp;#39;s state...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>photoScrollViewDidDoubleTapToZoom:didZoomIn:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIPhotoScrollViewDelegate-p</Scope>
    </TokenIdentifier>
    <Path>protocol_n_i_photo_scroll_view_delegate-p.html</Path>
    <Anchor>ad4b3ef423033107ed51c0b41890f698f</Anchor>
    <Abstract>The user has double-tapped the photo to zoom either in or out.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIPhotoAlbumScrollViewDataSource</Name>
      <APILanguage>c</APILanguage>
      <Type>intf</Type>
      <Scope>NIPhotoAlbumScrollViewDataSource</Scope>
    </TokenIdentifier>
    <Path>protocol_n_i_photo_album_scroll_view_data_source-p.html</Path>
    <Abstract>The photo album scroll data source.</Abstract>
    <DeclaredIn>NIPhotoAlbumScrollView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>numberOfPhotosInPhotoScrollView:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIPhotoAlbumScrollViewDataSource-p</Scope>
    </TokenIdentifier>
    <Path>protocol_n_i_photo_album_scroll_view_data_source-p.html</Path>
    <Anchor>a92aada6a17dbb2460144beaef77c1909</Anchor>
    <Abstract>Fetches the total number of photos in the scroll view.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>photoAlbumScrollView:photoAtIndex:photoSize:isLoading:originalPhotoDimensions:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIPhotoAlbumScrollViewDataSource-p</Scope>
    </TokenIdentifier>
    <Path>protocol_n_i_photo_album_scroll_view_data_source-p.html</Path>
    <Anchor>a580b6c3527b44349a13112c6460b68d5</Anchor>
    <Abstract>Fetches the highest-quality image available for the photo at the given index.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>photoAlbumScrollView:stopLoadingPhotoAtIndex:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIPhotoAlbumScrollViewDataSource-p</Scope>
    </TokenIdentifier>
    <Path>protocol_n_i_photo_album_scroll_view_data_source-p.html</Path>
    <Anchor>a2bbbf9642de6e944f830365d5f5bc626</Anchor>
    <Abstract>Called when you should cancel any asynchronous loading requests for the given photo.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIPhotoAlbumScrollViewDelegate</Name>
      <APILanguage>c</APILanguage>
      <Type>intf</Type>
      <Scope>NIPhotoAlbumScrollViewDelegate</Scope>
    </TokenIdentifier>
    <Path>protocol_n_i_photo_album_scroll_view_delegate-p.html</Path>
    <Abstract>The photo album scroll view delegate.</Abstract>
    <DeclaredIn>NIPhotoAlbumScrollView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>photoAlbumScrollViewDidScroll:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIPhotoAlbumScrollViewDelegate-p</Scope>
    </TokenIdentifier>
    <Path>protocol_n_i_photo_album_scroll_view_delegate-p.html</Path>
    <Anchor>a5fcd4c30753c07f9ea9410cd7fc560fd</Anchor>
    <Abstract>The user is scrolling between two photos.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>photoAlbumScrollView:didZoomIn:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIPhotoAlbumScrollViewDelegate-p</Scope>
    </TokenIdentifier>
    <Path>protocol_n_i_photo_album_scroll_view_delegate-p.html</Path>
    <Anchor>a0eef6e4fa181a3df8ab5d6909523d4ab</Anchor>
    <Abstract>The user double-tapped to zoom in or out.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>photoAlbumScrollViewDidChangePages:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIPhotoAlbumScrollViewDelegate-p</Scope>
    </TokenIdentifier>
    <Path>protocol_n_i_photo_album_scroll_view_delegate-p.html</Path>
    <Anchor>af4852dedcacd71213d41c3c063842882</Anchor>
    <Abstract>The current page has changed.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>photoAlbumScrollViewDidLoadNextPhoto:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIPhotoAlbumScrollViewDelegate-p</Scope>
    </TokenIdentifier>
    <Path>protocol_n_i_photo_album_scroll_view_delegate-p.html</Path>
    <Anchor>a32117b185be7beba7883340439dea650</Anchor>
    <Abstract>The next photo in the album has been loaded and is ready to be displayed.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>photoAlbumScrollViewDidLoadPreviousPhoto:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIPhotoAlbumScrollViewDelegate-p</Scope>
    </TokenIdentifier>
    <Path>protocol_n_i_photo_album_scroll_view_delegate-p.html</Path>
    <Anchor>a8bb24277692638ee8c113b1a25a6705e</Anchor>
    <Abstract>The previous photo in the album has been loaded and is ready to be displayed.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIPhotoScrollView</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>NIPhotoScrollView</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_photo_scroll_view.html</Path>
    <Abstract>A single photo view that supports zooming and rotation.</Abstract>
    <DeclaredIn>NIPhotoScrollView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>photoSize</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIPhotoScrollView</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_photo_scroll_view.html</Path>
    <Anchor>a6f908f1e81b9b188198bb13e0aa38e5d</Anchor>
    <Abstract>The current size of the photo.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>photoDimensions</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIPhotoScrollView</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_photo_scroll_view.html</Path>
    <Anchor>a9ed737c4d3e0e469d7effb5c43c3f72e</Anchor>
    <Abstract>The largest dimensions of the photo.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>zoomingIsEnabled</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIPhotoScrollView</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_photo_scroll_view.html</Path>
    <Anchor>a3d2a03a9d821767241a5cb821ff7afca</Anchor>
    <Abstract>Whether the photo is allowed to be zoomed.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>doubleTapToZoomIsEnabled</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIPhotoScrollView</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_photo_scroll_view.html</Path>
    <Anchor>a4e9b451beafdb4285991b21b5424eadd</Anchor>
    <Abstract>Whether double-tapping zooms in and out of the image.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>photoScrollViewDelegate</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIPhotoScrollView</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_photo_scroll_view.html</Path>
    <Anchor>a2e032560bef952835cc820594fca0ced</Anchor>
    <Abstract>The photo scroll view delegate.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prepareForReuse</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIPhotoScrollView</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_photo_scroll_view.html</Path>
    <Anchor>ae810feafd0768dd63ef8437c1c69f316</Anchor>
    <Abstract>Remove image and reset the zoom scale.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>image</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIPhotoScrollView</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_photo_scroll_view.html</Path>
    <Anchor>a779cbbcc2a400479d2ae643612358f0b</Anchor>
    <Abstract>The currently-displayed photo.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setImage:photoSize:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIPhotoScrollView</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_photo_scroll_view.html</Path>
    <Anchor>a4890f1d3b7bd9feba24b2c312d5ce105</Anchor>
    <Abstract>Set a new photo with a specific size.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFrameAndMaintainZoomAndCenter:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIPhotoScrollView</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_photo_scroll_view.html</Path>
    <Anchor>a022c6d9c29aa3f7e7b31387d5f05f9e0</Anchor>
    <Abstract>Set the frame of the view while maintaining the zoom and center of the scroll view.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIPhotoScrollViewDelegate</Name>
      <APILanguage>c</APILanguage>
      <Type>intf</Type>
      <Scope>NIPhotoScrollViewDelegate</Scope>
    </TokenIdentifier>
    <Path>protocol_n_i_photo_scroll_view_delegate-p.html</Path>
    <Abstract>The photo scroll view delegate.</Abstract>
    <DeclaredIn>NIPhotoScrollView.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>photoScrollViewDidDoubleTapToZoom:didZoomIn:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIPhotoScrollViewDelegate-p</Scope>
    </TokenIdentifier>
    <Path>protocol_n_i_photo_scroll_view_delegate-p.html</Path>
    <Anchor>ad4b3ef423033107ed51c0b41890f698f</Anchor>
    <Abstract>The user has double-tapped the photo to zoom either in or out.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIProcessorDelegate</Name>
      <APILanguage>c</APILanguage>
      <Type>intf</Type>
      <Scope>NIProcessorDelegate</Scope>
    </TokenIdentifier>
    <Path>protocol_n_i_processor_delegate-p.html</Path>
    <Abstract>Defines the basic protocol for processing data.</Abstract>
    <DeclaredIn>NIProcessorDelegate.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processor:processObject:error:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIProcessorDelegate-p</Scope>
    </TokenIdentifier>
    <Path>protocol_n_i_processor_delegate-p.html</Path>
    <Anchor>af7822e57a67d47340861f06ca5420bc2</Anchor>
    <Abstract>Called as the final step in the processing order.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIProcessorHTTPRequest</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>NIProcessorHTTPRequest</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_processor_h_t_t_p_request.html</Path>
    <Abstract>An HTTP request that processes the returned data on a separate thread.</Abstract>
    <DeclaredIn>NIProcessorHTTPRequest.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processedObject</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIProcessorHTTPRequest</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_processor_h_t_t_p_request.html</Path>
    <Anchor>a079aadcb5f4ea692ad4f89f71a41f82d</Anchor>
    <Abstract>The resulting root object after the request has completed and the data has been processed.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processDataBlock</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIProcessorHTTPRequest</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_processor_h_t_t_p_request.html</Path>
    <Anchor>ae7c2909f0df1cd0ff2530b74fa458a3f</Anchor>
    <Abstract>The second step in the processing order for the data.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processorDelegate</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIProcessorHTTPRequest</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_processor_h_t_t_p_request.html</Path>
    <Anchor>a467653946b4e316c00f357fbe6d1cc48</Anchor>
    <Abstract>The final step in the processing order for the data.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>objectFromResponseData:error:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIProcessorHTTPRequest</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_processor_h_t_t_p_request.html</Path>
    <Anchor>af807389013bf372d6693397fd041c0e1</Anchor>
    <Abstract>A subclass should implement this method and transform the data into an object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIReadFileFromDiskOperation</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>NIReadFileFromDiskOperation</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_read_file_from_disk_operation.html</Path>
    <Abstract>An operation that reads a file from disk.</Abstract>
    <DeclaredIn>NIOperations.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>delegate</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIOperation</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_operation.html</Path>
    <Anchor>a8fcfebd75a9559d0a41e9f8bcd01facf</Anchor>
    <Abstract>The delegate through which changes are notified for this operation.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tag</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIOperation</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_operation.html</Path>
    <Anchor>a3ffdf65e811b47ea8595c8ea2a1376ec</Anchor>
    <Abstract>A simple tagging mechanism for identifying operations.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>lastError</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIOperation</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_operation.html</Path>
    <Anchor>add09c9ae4ab576c27648f4a3ab3b9cea</Anchor>
    <Abstract>The error last passed to the didFailWithError notification.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>didStartBlock</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIOperation</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_operation.html</Path>
    <Anchor>a6244b38cedcd4c75360a15b19514321f</Anchor>
    <Abstract>The operation has started executing.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>didFinishBlock</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIOperation</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_operation.html</Path>
    <Anchor>a18e14e4f1f218899b97febe09d48b68d</Anchor>
    <Abstract>The operation has completed successfully.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>didFailWithErrorBlock</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIOperation</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_operation.html</Path>
    <Anchor>a6d1ae5a692180c568ecfd8d3b02300e3</Anchor>
    <Abstract>The operation failed in some way and has completed.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>willFinishBlock</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIOperation</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_operation.html</Path>
    <Anchor>af70a25765166a9b792dc053b7b9378b6</Anchor>
    <Abstract>The operation is about to complete successfully.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>pathToFile</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIReadFileFromDiskOperation</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_read_file_from_disk_operation.html</Path>
    <Anchor>adbd0fb5979eafbc48a938204e54c38c8</Anchor>
    <Abstract>The path to the file that should be read from disk.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>data</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIReadFileFromDiskOperation</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_read_file_from_disk_operation.html</Path>
    <Anchor>a754e08489a25c244257bfd6e733f61e2</Anchor>
    <Abstract>The data that was read from disk.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>processedObject</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIReadFileFromDiskOperation</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_read_file_from_disk_operation.html</Path>
    <Anchor>af07b3fadfa7445e1993bf2eedd596aa6</Anchor>
    <Abstract>An object created from the data that was read from disk.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initWithPathToFile:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIReadFileFromDiskOperation</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_read_file_from_disk_operation.html</Path>
    <Anchor>a8700010910b9dad07f61cc040b163da7</Anchor>
    <Abstract>Designated initializer.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operationDidStart</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIOperation</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_operation.html</Path>
    <Anchor>a8c484d9ee1a76ea72b0d3afc0782f8fc</Anchor>
    <Abstract>On the main thread, notify the delegate that the operation has begun.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operationDidFinish</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIOperation</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_operation.html</Path>
    <Anchor>aa348248e667a2f1021f6451cb7cbbc0f</Anchor>
    <Abstract>On the main thread, notify the delegate that the operation has finished.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operationDidFailWithError:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIOperation</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_operation.html</Path>
    <Anchor>abcac75178abd6f277fcac4332bad2976</Anchor>
    <Abstract>On the main thread, notify the delegate that the operation has failed.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>operationWillFinish</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIOperation</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_operation.html</Path>
    <Anchor>ac7e636b6ec59af66fc5964c7b30a2930</Anchor>
    <Abstract>In the operation&amp;#39;s thread, notify the delegate that the operation will finish successfully.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIToolbarPhotoViewController</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>NIToolbarPhotoViewController</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_toolbar_photo_view_controller.html</Path>
    <Abstract>A simple photo album view controller implementation with a toolbar.</Abstract>
    <DeclaredIn>NIToolbarPhotoViewController.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>showPhotoAlbumBeneathToolbar</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIToolbarPhotoViewController</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_toolbar_photo_view_controller.html</Path>
    <Anchor>a7bd38a82a21e17d2d3014a7d0bb574d4</Anchor>
    <Abstract>Whether to show the photo album view beneath the toolbar or not.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>hidesChromeWhenScrolling</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIToolbarPhotoViewController</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_toolbar_photo_view_controller.html</Path>
    <Anchor>aa9ee0c17370b57ce498e7864be1bfc33</Anchor>
    <Abstract>Whether or not to hide the chrome when the user begins interacting with the photo.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>chromeCanBeHidden</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIToolbarPhotoViewController</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_toolbar_photo_view_controller.html</Path>
    <Anchor>ab71b18ae481b0f9dd225f001e0e631b9</Anchor>
    <Abstract>Whether or not to allow hiding the chrome.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>animateMovingToNextAndPreviousPhotos</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIToolbarPhotoViewController</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_toolbar_photo_view_controller.html</Path>
    <Anchor>aef2b9930b7397117509201a374c7f28f</Anchor>
    <Abstract>Whether to animate moving to a next or previous photo when the user taps the button.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toolbar</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIToolbarPhotoViewController</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_toolbar_photo_view_controller.html</Path>
    <Anchor>a9e9dea6df26f101beac8ab6edba27ecd</Anchor>
    <Abstract>The toolbar view.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>photoAlbumView</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIToolbarPhotoViewController</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_toolbar_photo_view_controller.html</Path>
    <Anchor>a48147d9bffadafe85dc3e9e769565161</Anchor>
    <Abstract>The photo album view.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nextButton</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIToolbarPhotoViewController</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_toolbar_photo_view_controller.html</Path>
    <Anchor>a55e0a510317f26fee796e36692a3ceb6</Anchor>
    <Abstract>The &amp;#39;next&amp;#39; button.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>previousButton</Name>
      <APILanguage>occ</APILanguage>
      <Type>instp</Type>
      <Scope>NIToolbarPhotoViewController</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_toolbar_photo_view_controller.html</Path>
    <Anchor>a483abaaa360e65d5d2c497c74912e160</Anchor>
    <Abstract>The &amp;#39;previous&amp;#39; button.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>photoAlbumScrollViewDidScroll:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIPhotoAlbumScrollViewDelegate-p</Scope>
    </TokenIdentifier>
    <Path>protocol_n_i_photo_album_scroll_view_delegate-p.html</Path>
    <Anchor>a5fcd4c30753c07f9ea9410cd7fc560fd</Anchor>
    <Abstract>The user is scrolling between two photos.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>photoAlbumScrollView:didZoomIn:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIPhotoAlbumScrollViewDelegate-p</Scope>
    </TokenIdentifier>
    <Path>protocol_n_i_photo_album_scroll_view_delegate-p.html</Path>
    <Anchor>a0eef6e4fa181a3df8ab5d6909523d4ab</Anchor>
    <Abstract>The user double-tapped to zoom in or out.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>photoAlbumScrollViewDidChangePages:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIPhotoAlbumScrollViewDelegate-p</Scope>
    </TokenIdentifier>
    <Path>protocol_n_i_photo_album_scroll_view_delegate-p.html</Path>
    <Anchor>af4852dedcacd71213d41c3c063842882</Anchor>
    <Abstract>The current page has changed.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>photoAlbumScrollViewDidLoadNextPhoto:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIPhotoAlbumScrollViewDelegate-p</Scope>
    </TokenIdentifier>
    <Path>protocol_n_i_photo_album_scroll_view_delegate-p.html</Path>
    <Anchor>a32117b185be7beba7883340439dea650</Anchor>
    <Abstract>The next photo in the album has been loaded and is ready to be displayed.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>photoAlbumScrollViewDidLoadPreviousPhoto:</Name>
      <APILanguage>occ</APILanguage>
      <Type>intfm</Type>
      <Scope>NIPhotoAlbumScrollViewDelegate-p</Scope>
    </TokenIdentifier>
    <Path>protocol_n_i_photo_album_scroll_view_delegate-p.html</Path>
    <Anchor>a8bb24277692638ee8c113b1a25a6705e</Anchor>
    <Abstract>The previous photo in the album has been loaded and is ready to be displayed.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NIURLMap</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>NIURLMap</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_u_r_l_map.html</Path>
    <Abstract>A container of one-directional mappings from URLs to objects and vice-versa.</Abstract>
    <DeclaredIn>NIURLMap.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>from:toViewController:</Name>
      <APILanguage>occ</APILanguage>
      <Type>instm</Type>
      <Scope>NIURLMap</Scope>
    </TokenIdentifier>
    <Path>interface_n_i_u_r_l_map.html</Path>
    <Anchor>aad231d89de3d92fe97df1eb367f1eeae</Anchor>
    <Abstract>Register a URL with a specific view controller.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NSData</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>NSData</Scope>
    </TokenIdentifier>
    <Path>class_n_s_data.html</Path>
    <Abstract>For hashing raw data.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>NSString</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>NSString</Scope>
    </TokenIdentifier>
    <Path>class_n_s_string.html</Path>
    <Abstract>For manipulating NSStrings.</Abstract>
  </Token>
</Tokens>
