//
// Copyright 2011 Jeff Verkoeyen
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

#import "NIOverviewerLogger.h"


///////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////
@implementation NIOverviewerLogger

@synthesize oldestLogAge = _oldestLogAge;
@synthesize deviceLogs = _deviceLogs;


///////////////////////////////////////////////////////////////////////////////////////////////////
- (void)dealloc {
  NI_RELEASE_SAFELY(_deviceLogs);

  [super dealloc];
}


///////////////////////////////////////////////////////////////////////////////////////////////////
- (id)init {
  if ((self = [super init])) {
    _deviceLogs = [[NILinkedList alloc] init];
    
    _oldestLogAge = 60;
  }
  return self;
}


///////////////////////////////////////////////////////////////////////////////////////////////////
- (void)pruneEntriesFromLinkedList:(NILinkedList *)ll {
  NSDate* cutoffDate = [NSDate dateWithTimeIntervalSinceNow:-_oldestLogAge];
  while ([[((NIOverviewerLogEntry *)[ll firstObject])
           timestamp] compare:cutoffDate] == NSOrderedAscending) {
    [ll removeFirstObject];
  }
}


///////////////////////////////////////////////////////////////////////////////////////////////////
- (void)addDeviceLog:(NIOverviewerDeviceLogEntry *)logEntry {
  [self pruneEntriesFromLinkedList:_deviceLogs];

  [_deviceLogs addObject:logEntry];
}


@end


///////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////
@implementation NIOverviewerLogEntry

@synthesize timestamp = _timestamp;


///////////////////////////////////////////////////////////////////////////////////////////////////
- (void)dealloc {
  NI_RELEASE_SAFELY(_timestamp);
  
  [super dealloc];
}


///////////////////////////////////////////////////////////////////////////////////////////////////
- (id)initWithTimestamp:(NSDate *)timestamp {
  if ((self = [super init])) {
    _timestamp = [timestamp retain];
  }
  return self;
}


@end



///////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////
@implementation NIOverviewerDeviceLogEntry

@synthesize bytesOfFreeMemory = _bytesOfFreeMemory;
@synthesize bytesOfTotalMemory = _bytesOfTotalMemory;
@synthesize bytesOfTotalDiskSpace = _bytesOfTotalDiskSpace;
@synthesize bytesOfFreeDiskSpace = _bytesOfFreeDiskSpace;
@synthesize batteryLevel = _batteryLevel;
@synthesize batteryState = _batteryState;

@end
